# Boxstarter options

$Boxstarter.RebootOk=$false # Allow reboots?
$Boxstarter.NoPassword=$false # Is this a machine with no login password?
$Boxstarter.AutoLogin=$true # Save my password securely and auto-login after a reboot

# Configure Windows
Set-WindowsExplorerOptions -EnableShowHiddenFilesFoldersDrives -EnableShowProtectedOSFiles -EnableShowFileExtensions -EnableShowFullPathInTitleBar
Set-TaskbarOptions -Size Small -Dock Bottom -Combine Full -Lock
Update-ExecutionPolicy Unrestricted
Disable-UAC

Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux
Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V-All

if (Test-PendingReboot) { Invoke-Reboot }

choco feature enable -n allowGlobalConfirmation

# Packages
choco install ConEmu

## Git
choco install git-credential-manager-for-windows #installs git

## Node, npm
choco install nodejs.install
refreshenv
npm install -g npm-windows-upgrade

## PHP
choco install php
refreshenv
choco install composer

## Editors
choco install visualstudiocode
choco install atom

## Basics
choco install Firefox
choco install Vivaldi
choco install 7zip.install
#choco install sysinternals
choco install postman
#choco install fiddler4
choco install openvpn
choco install docker-for-windows
choco install dbkoda
choco install paket
choco install fake --pre
choco install dotnetcore

## Configure .NET environment
choco install DotNet3.5 # for older legacy apps
choco install visualstudio2017professional
choco install visualstudio2017-workload-netweb 
choco install visualstudio2017-workload-netcoretools 

### Configure Powershell
Install-Package Posh-Git -Source PSGallery
Invoke-Expression ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/pecigonzalo/Oh-My-Posh/master/install.ps1'))

### TODO: remove unwanted apps
#Get-Contents ./app_to_remove.txt | For-Each {  Get-AppxPackage $_ | Remove-AppxPackage }

# Let's get Updates, too
Enable-UAC
Enable-MicrosoftUpdate
Install-WindowsUpdate -acceptEula
Update-ExecutionPolicy Unrestricted
if (Test-PendingReboot) { Invoke-Reboot }

START ms-windows-store://pdp/?ProductId=9nblggh4msv6
